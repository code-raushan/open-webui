"""add config and document_chunk tables

Revision ID: add_config_and_document_chunk_tables
Revises: add_missing_tables
Create Date: 2025-01-27 11:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import open_webui.internal.db


# revision identifiers, used by Alembic.
revision: str = 'add_config_and_document_chunk_tables'
down_revision: Union[str, None] = 'add_missing_tables'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create config table
    op.create_table('config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create document_chunk table
    op.create_table('document_chunk',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('vector', sa.Text(), nullable=True),  # Using Text for SQLite compatibility
    sa.Column('collection_name', sa.Text(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('vmetadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for document_chunk
    op.create_index('idx_document_chunk_collection_name', 'document_chunk', ['collection_name'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_document_chunk_collection_name', table_name='document_chunk')
    op.drop_table('document_chunk')
    op.drop_table('config')
    # ### end Alembic commands ### 